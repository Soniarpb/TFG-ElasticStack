input {
  # RECOGEMOS LOS DATOS DE UN MULTIPLES FICHEROS .tsv
  file {
    path => "/usr/share/logstash/pipeline/data/CANCER/*.tsv"
    mode => read
    start_position => "beginning"
    #codec => csv
  }
}

filter {
  # ESTANDARIZACION DE LOS CAMPOS DE ACUERDO AL FORMATO QUE QUEREMOS SIGUIENDO UNAS PAUTAS (schema ECS)
  # EXPOSURE --> CARACTERISTICAS
  if [path] =~ /exposure.*/ {
    csv {
      separator => "	"
      autogenerate_column_names => false
      columns =>
      ["id_paciente","origen_datos","id_proyecto","edad_al_inicio","consumo_semanal_alcohol","consumo_diario_alcohol","historial_alcohol","intensidad_alcohol","tipo_alcohol","exposicion_asbestos","imc","cigarros_al_dia","exposicion_carbon","exposicion_ambiental_tabaco","tiempo_exposicion","tipo_exposicion","altura","consumo_semanal_marihuana","paquetes_tabaco_anual","exposicion_radon","exposicion_silice","fumador_pasivo_de_niño","edad_para_dejar_fumar","frecuancia_fumar","tiempo_entre_despertar_fumar","año_empezo_fumar","año_dejo_fumar","estado_tabaquismo","consumo_tabaco_diario","exposicion_tabaco","tipo_tabaco","peso","años_fumando"]
    }
    mutate { add_tag => [ "caracteristicas" ] }
    mutate { remove_field => [ "message" ] }
  }

  # CLINICAL --> DIAGNOSTICO
  if [path] =~ /clinical.*/ {
    csv {
      separator => "	"
      autogenerate_column_names => false
      columns =>
["id_paciente","origen_datos","id_proyecto","edad_al_indexado","año_ofuscado","causa_fallecimiento","causa_fallecimiento_origen","pais_residencia","dias_desde_nacimiento","dias_hasta_fallecimiento","etnia","genero","años_trabajando","prematuro","raza","estado_vital","semanas_gestacion","año_nacimiento","año_fallecimiento","edad_diagnostico","ajcc_clinico_m","ajcc_clinico_n","ajcc_clinico_etapa","ajcc_clinico_t","ajcc_patologico_m","ajcc_patologico_n","ajcc_patologico_etapa","ajcc_patologico_t","ajcc_edicion_sitema","anaplasia_presente","anaplasia_tipo","ann_b_sintomas","ann_clinico_etapa","ann_afectacion_extraganglionar","ann_patologico_etapa","mejor_respuesta_general","breslow_espesor","variante_linfoma_burkitt","pugh_clasificacion_infantil","margen_reseccion_circunferencial","clasificacion_tumor","etapa_higado_dentado","grupo_riesgo_neuroblastoma","cancer_renal_etapa","grupo_riesgo_rabdomiosarcoma","dias_mejor_respuesta_general","dias_desde_diagnostico","dias_desde_ultimo_seguimiento","dias_hasta_ultimo_estado_enfermedad_conocido","dias_desde_recurrio_enfermedad","leucemia_clasificacion","enneking_grado","enneking_metastasis","enneking_etapa","enneking_lugar_tumor","displasia_esofagica_columnar_grado","displasia_esofagica_columnar","etapa_figo","figo_año_edicion","primer_sintoma_prediagnostico","afectacion_union_esofagica_gastrica","gleason_grado_grupo","gleason_grado_terciario","gleason_patrones","presencia_mucosa_columnar_celulas_caliciformes","dimension_tumor_mayor","peso_bruto_tumor","codigo_icd-10","igcccg_etapa","inpc_grado","inpc_grupo_histologico","inrg_etapa","inss_etapa","pronostico","irs_grupo","irs_etapa","ishak_fibrosis","iss_etapa","foco_peritoneal_extrapelvico_mayor","ultimo_estado_enfermedad_conocido","lateralidad","ganglio_linfatico_lugar_afectado","ganglios_linfaticos_postivos","ganglios_linfaticos_examinados","invasion_linfatica_presente","margenes_distancia","margenes_involucrados","masaoka_etapa","medulloblastoma_molecular_clasificacion","metastasis_en_diagnostico","metastasis_en_diagnostico_lugar","metodo_diagnostico","caracteristicas_micropapilares","cariorrexis_mitosis_indice","recuento_mitotico","morfologia","enfermedad_regional_no_ganglionar","depositos_tumorales_no_ganglionares","estado_muestra_ovario","afectacion_superficie_ovarica","tipo_celula_renal_papilar","tumor_invasion_porcentaje","invasion_perineural_presente","ganglios_linfaticos_peripancreaticos_positivos","ganglios_linfaticos_peripancreaticos_examinados","estado_citologico_liquido_peritoneal","embarazada_durante_diagnostico","diagnostico_inicial","gleason_grado_primario","malignidad_previa","tratamiento_previo","progresion_o_recurrencia","enfermedad_residual","presencia_nodulo_satelite","gleason_grado_secundario","lugar_reseccion_biopsia","sitios_participacion","localizacion_supratentorial","cancer_sincrono","tejido_organo_origen","extension_transglotica","tumor_confinado_organo_origen","tumor_profundidad","tumor_localizacion","tumor_grado","tumor_diametro_mayor","tumor_grado_regresion","tumor_etapa","invasion_vascular_presente","invasion_vascular_tipo","weiss_puntuacion_evaluacion","who_cns_grado","who_nte_grado","tumor_hitologico_wilms_subtipo","año_diagnostico","quimioterapia_concurrente_a_radiacion","[tratamiento][dias_para_finalizar_tratamiento]","[tratamiento][dias_para_empezar_tratamiento]","[tratamiento][estado_inicial]","[tratamiento][numero_ciclos]","[tratamiento][motivo_finalizacion]","[tratamiento][regimen_linea_terapia]","[tratamiento][agentes_terapeuticos]","[tratamiento][lugar]","[tratamiento][brazo]","[tratamiento][dosis]","[tratamiento][numero_dosis]","[tratamiento][efecto]","[tratamiento][indicador_efecto]","[tratamiento][frecuencia]","[tratamiento][intencion]","[tratamiento][tratamiento_o_terapia]","[tratamiento][resultados]","[tratamiento][tipo]"]
    }
    if [año_ofuscado] { mutate { remove_field => [ "año_ofuscado" ] } }
    if [afectacion_union_esofagica_gastrica] { mutate { remove_field => [ "afectacion_union_esofagica_gastrica" ] } }
    if [presencia_mucosa_columnar_celulas_caliciformes] { mutate { remove_field => [ "presencia_mucosa_columnar_celulas_caliciformes" ] } }
    if [lateralidad] { mutate { remove_field => [ "lateralidad" ] } }
    if [presencia_nodulo_satelite] { mutate { remove_field => [ "presencia_nodulo_satelite" ] } }
    mutate { add_tag => [ "diagnostico" ] }
  }

  # FAMILY_HISTORY --> HISTORIAL_FAMILIAR
  if [path] =~ /family.*/ {
    csv {
      separator => "	"
      autogenerate_column_names => false
      columns =>
      ["id_paciente","origen_datos","id_proyecto","edad_diagnostico_pariente","genero_pariente","diagnostico_pariente","tipo_pariente","pariente_con_cancer","familiares_recuento_antecedentes_cancer"]
    }
    mutate { add_tag => [ "historial_familiar" ] }
    mutate { remove_field => [ "message" ] }
  }

  # ELIMINAMOS LA PRIMERA LINEA, LA QUE CONTIENE LOS NOMBRES DE LOS CAMPOS
  if [id_paciente] == "case_id" {
    drop {}
  }

  # AGRUPAMOS POR Unknown LOS CAMPOS unknown, Unknown, not reported, Not Reported, unspecified
  ruby {
    code => "
      def walk_hash(parent, path, hash)
        path << parent if parent
        hash.each do |key, value|
          walk_hash(key, path, value) if value.is_a?(Hash)
          @paths << (path + [key]).map {|p| '[' + p + ']' }.join('')
        end
        path.pop
      end

      @paths = []
      walk_hash(nil, [], event.to_hash)

      @paths.each do |path|
        value = event.get(path)
        event.remove(path)
        event.set(path, 'Unknown') if value == 'not reported' || value == 'Not Reported' || value == 'unknown' || value == 'Unknown' || value == 'unspecified'
        event.set(path, value) if value != 'not reported' && value != 'Not Reported' && value != 'unknown' && value != 'Unknown' && value != 'unspecified'
      end
    "
  }
  # ESTABLECEMOS Desconocido PARA AQUELLOS CAMPOS QUE QUERAMOS QUE SIEMPRE TENGAN UN VALOR
  if "diagnostico" in [tags] {
    if ![genero] or [genero] == "'--" { mutate { replace => {"genero" => "Unknown" } } }
    if ![etnia] or [etnia] == "'--" { mutate { replace => {"etnia" => "Unknown" } } }
    if ![raza] or [raza] == "'--" { mutate { replace =>{ "raza" => "Unknown" } } }
    if ![estado_vital] or [estado_vital] == "'--" { mutate { replace => { "estado_vital" => "Unknown" } } }
    if ![causa_fallecimiento] or [causa_fallecimiento] == "'--" { mutate { replace => { "causa_fallecimiento" => "Unknown" } } }
    if ![origen_datos] or [origen_datos] == "'--" { mutate { replace => {"origen_datos" => "Unknown" } } }
    if ![edad_diagnostico] or [edad_diagnostico] == "'--" { mutate { replace => {"edad_diagnostico" => 0 } } }
    if ![ajcc_clinico_m] or [ajcc_clinico_m] == "'--" { mutate { replace => {"ajcc_clinico_m" => "Unknown" } } }
    if ![ajcc_clinico_n] or [ajcc_clinico_n] == "'--" { mutate { replace => {"ajcc_clinico_n" => "Unknown" } } }
    if ![ajcc_clinico_t] or [ajcc_clinico_t] == "'--" { mutate { replace => {"ajcc_clinico_t" => "Unknown" } } }
    if ![ajcc_clinico_etapa] or [ajcc_clinico_etapa] == "'--" { mutate { replace => {"ajcc_clinico_etapa" => "Unknown" } } }
    if ![ajcc_patologico_m] or [ajcc_patologico_m] == "'--" { mutate { replace => {"ajcc_patologico_m" => "Unknown" } } }
    if ![ajcc_patologico_n] or [ajcc_patologico_n] == "'--"  { mutate { replace => {"ajcc_patologico_n" => "Unknown" } } }
    if ![ajcc_patologico_t] or [ajcc_patologico_t] == "'--" { mutate { replace => {"ajcc_patologico_t" => "Unknown" } } }
    if ![ajcc_patologico_etapa] or [ajcc_patologico_etapa] == "'--" { mutate { replace => {"ajcc_patologico_etapa" => "Unknown" } } }
    if ![ajcc_edicion_sitema] or [ajcc_edicion_sitema] == "'--" { mutate { replace => {"ajcc_edicion_sitema" => "Unknown" } } }
    if ![clasificacion_tumor] or [clasificacion_tumor] == "'--" { mutate { replace => {"clasificacion_tumor" => "Unknown" } } }
    if ![codigo_icd-10] or [codigo_icd-10] == "'--" { mutate { replace => {"codigo_icd-10" => "Unknown" } } }
    if ![etapa_iss] or [etapa_iss] == "'--" { mutate { replace => {"etapa_iss" => "Unknown" } } }
    if ![ultimo_estado_conocido_enfermedad] or [ultimo_estado_conocido_enfermedad] == "'--" { mutate { replace => {"ultimo_estado_conocido_enfermedad" => "Unknown" } } }
    if ![metastasis_en_diagnostico] or [metastasis_en_diagnostico] == "'--" { mutate { replace => {"metastasis_en_diagnostico" => "Unknown" } } }
    if ![metastasis_en_diagnostico_lugar] or [metastasis_en_diagnostico_lugar] == "'--" { mutate { replace => {"metastasis_en_diagnostico_lugar" => "Unknown" } } }
    if ![metodo_diagnostico] or [metodo_diagnostico] == "'--" { mutate { replace => {"metodo_diagnostico" => "Unknown" } } }
    if ![morfologia] or [morfologia] == "'--" { mutate { replace => {"morfologia" => "Unknown" } } }
    if ![diagnostico_inicial] or [diagnostico_inicial] == "'--" { mutate { replace => {"diagnostico_inicial" => "Unknown" } } }
    if ![enfermedad_residual] or [enfermedad_residual] == "'--" { mutate { replace => {"enfermedad_residual" => "Unknown" } } }
    if ![lugar_reseccion_biopsia] or [lugar_reseccion_biopsia] == "'--" { mutate { replace => {"lugar_reseccion_biopsia" => "Unknown" } } }
    if ![cancer_sincrono] or [cancer_sincrono] == "'--" { mutate { replace => {"cancer_sincrono" => "Unknown" } } }
    if ![origen_datos] or [origen_datos] == "'--" { mutate { replace => {"origen_datos" => "Unknown" } } }
    if [edad_diagnostico] == 0 { mutate { remove_field => [ "edad_diagnostico" ] } }
    if [edad_diagnostico] {
      ruby {
        code => "event.set('edad_paciente', (event.get('edad_diagnostico').to_i / 365))"
      }
    }
    if [edad_paciente] == 0 { mutate { remove_field => [ "edad_paciente" ] } }
}

  if "caracteristicas" in [tags] {
    if ![origen_datos] or [origen_datos] == "'--" { mutate { replace => {"origen_datos" => "Unknown" } } }
    if ![peso] or [peso] == "'--" { mutate { replace => {"peso" => 0 } } }
    if ![altura] or [altura] == "'--" { mutate { replace => {"altura" => 0 } } }
    if ![imc] or [imc] == "'--" { mutate { replace => {"imc" => 0 } } }
    if ![exposicion_radon] or [exposicion_radon] == "'--" { mutate { replace => {"exposicion_radon" => "No" } } }
    if ![exposicion_asbestos] or [exposicion_asbestos] == "'--" { mutate { replace => {"exposicion_asbestos" => "No" } } }
    if ![exposicion_tabaco]  or [exposicion_tabaco] == "'--"{ mutate { replace => {"exposicion_tabaco" => "No" } } }
    if ![exposicion_carbon] or [exposicion_carbon] == "'--" { mutate { replace => {"exposicion_carbon" => "No" } } }
    if ![exposicion_ambiental_tabaco] or [exposicion_ambiental_tabaco] == "'--" { mutate { replace => {"exposicion_ambiental_tabaco" => "No" } } }
    if ![exposicion_silice] or [exposicion_silice] == "'--" { mutate { replace => {"exposicion_silice" => "No" } } }

  }

  # ELIMINAMOS TODOS LOS CAMPOS QUE SOLO TENGAN NULL
  ruby {
    code => "
      def walk_hash(parent, path, hash)
        path << parent if parent
        hash.each do |key, value|
          walk_hash(key, path, value) if value.is_a?(Hash)
          @paths << (path + [key]).map {|p| '[' + p + ']' }.join('')
        end
        path.pop
      end

      @paths = []
      walk_hash(nil, [], event.to_hash)

      @paths.each do |path|
        value = event.get(path)
        event.remove(path) if value.nil? || (value.respond_to?(:empty?) && value.empty?) || value == '\'--'
      end
    "
  }

  # SI LOS CAMPOS DE TRATAMIENTO ESTAN A NULL LOS PONEMOS CON UN - PARA FACILITAR LAS VISUALIZACIONES PROXIMAS
  if "diagnostico" in [tags] {
    if ![tratamiento][estado_inicial] { mutate { add_field => { "[tratamiento][estado_inicial]" => "-" } } }
    if ![tratamiento][lugar] { mutate { add_field => { "[tratamiento][lugar]" => "-" } } }
    if ![tratamiento][frecuencia] { mutate { add_field => { "[tratamiento][frecuencia]" => "-" } } }
    if ![tratamiento][lugar] { mutate { add_field => { "[tratamiento][lugar]" => "-" } } }
    if ![tratamiento][resultados] { mutate { add_field => { "[tratamiento][resultados]" => "-" } } }
    if ![tratamiento][tipo] { mutate { add_field => { "[tratamiento][tipo]" => "-" } } }
    if ![tratamiento][tratamiento_o_terapia] { mutate { add_field => { "[tratamiento][tratamiento_o_terapia]" => "-" } } }
   if ![tratamiento][tipo] { mutate { add_field => { "[tratamiento][]" => "-" } } }
  }

  # EXTRAER TIPO DE ENFERMEDAD EN BASE A [codigo_icd-10] CON REXEG, NOS INTERESAN LAS C (Neoplasia o Tumor)
  if "diagnostico" in [tags] {
    if ([codigo_icd-10] =~ /C[0-9]*(\.[0-9]*)?/) or ([codigo_icd-10] =~ /D[0-4]*(\.[0-9]*)?/) {
      if ([codigo_icd-10] =~ /C0[0-9](\.[0-9]*)?/) or ([codigo_icd-10] =~ /C1[0-4](\.[0-9]*)?/) {
        mutate { add_field => {"icd-10" => "Neoplasias malignas de labio, cavidad oral y faringe" } }
      }
      else if ([codigo_icd-10] =~ /C1[5-9]*(\.[0-9]*)?/) or ([codigo_icd-10] =~ /C2[0-6]*(\.[0-9]*)?/) {
        mutate { add_field => {"icd-10" => "Neoplasias malignas de organos digestivos" } }
      }
      else if ([codigo_icd-10] =~ /C3[0-9]*(\.[0-9]*)?/) {
        mutate { add_field => {"icd-10" => "Neoplasias malignas de organos respiratorios e intratoracicos" } }
      }
      else if ([codigo_icd-10] =~ /C4[0-1]*(\.[0-9]*)?/) {
        mutate { add_field => {"icd-10" => "Neoplasias malignas de hueso y cartilago articular" } }
      }
      else if ([codigo_icd-10] =~ /C4[3-4]*(\.[0-9]*)?/) {
        mutate { add_field => {"icd-10" => "Melanoma y otras neoplasias malignas de piel" } }
      }
      else if ([codigo_icd-10] =~ /C4[5-9]*(\.[0-9]*)?/) {
        mutate { add_field => {"icd-10" => "Neoplasias malignas de tejido mesotelial y blando" } }
      }
      else if ([codigo_icd-10] =~ /C50*(\.[0-9]*)?/) {
        mutate { add_field => {"icd-10" => "Neoplasias malignas de mama" } }
      }
      else if ([codigo_icd-10] =~ /C5[1-8]*(\.[0-9]*)?/) {
        mutate { add_field => {"icd-10" => "Neoplasias malignas de órganos genitales femeninos" } }
      }
      else if ([codigo_icd-10] =~ /C6[0-3]*(\.[0-9]*)?/) {
        mutate { add_field => {"icd-10" => "Neoplasias malignas de organos genitales masculinos" } }
      }
      else if ([codigo_icd-10] =~ /C6[4-8]*(\.[0-9]*)?/) {
        mutate { add_field => {"icd-10" => "Neoplasias malignas del tracto urinario" } }
      }
      else if ([codigo_icd-10] =~ /C69(\.[0-9]*)?/) or ([codigo_icd-10] =~ /C7[0-2](\.[0-9]*)?/){
        mutate { add_field => {"icd-10" => "Neoplasias malignas de ojos y sistema nervioso central" } }
      }
      else if ([codigo_icd-10] =~ /C7[3-5](\.[0-9]*)?/) {
        mutate { add_field => {"icd-10" => "Neoplasias malignas de tiroides y otras glándulas endocrinas" } }
      }
      else if ([codigo_icd-10] =~ /C7[6-9](\.[0-9]*)?/) or ([codigo_icd-10] =~ /C80(\.[0-9]*)?/){
        mutate { add_field => {"icd-10" => "Neoplasias malignas secundarias y de enfermedades" } }
      }
      else if ([codigo_icd-10] =~ /C7A(\.[0-9]*)?/) {
        mutate { add_field => {"icd-10" => "Tumores neuroendocrinos malignos" } }
      }
      else if ([codigo_icd-10] =~ /C7B(\.[0-9]*)?/) {
        mutate { add_field => {"icd-10" => "Tumores neuroendocrinos secundarios" } }
      }
      else if ([codigo_icd-10] =~ /C8[1-9](\.[0-9]*)?/) or ([codigo_icd-10] =~ /C9[0-6](\.[0-6]*)?/) {
        mutate { add_field => {"icd-10" => "Neoplasias malignas de tejido linfoide, hematopoyético y afines" } }
      }
      else if ([codigo_icd-10] =~ /D0[0-9](\.[0-9]*)?/) {
        mutate { add_field => {"icd-10" => "Neoplasias in situ" } }
      }
      else if ([codigo_icd-10] =~ /D1[1-9](\.[0-9]*)?/) or ([codigo_icd-10] =~ /D2[0-9](\.[0-6]*)?/) or ([codigo_icd-10] =~ /D3[0-6](\.[0-6]*)?/) {
        mutate { add_field => {"icd-10" => "Neoplasias benignas, excepto tumores neuroendocrinos benignos" } }
      }
      else if ([codigo_icd-10] =~ /D3[7-9](\.[0-9]*)?/) or ([codigo_icd-10] =~ /D4[0-8](\.[0-6]*)?/) {
        mutate { add_field => {"icd-10" => "Neoplasias de comportamiento incierto, policitemia vera y síndromes mielodisplásicos" } }
      }
      else if ([codigo_icd-10] =~ /C3A(\.[0-9]*)?/) {
        mutate { add_field => {"icd-10" => "Tumores neuroendocrinos benignos" } }
      }
      else if ([codigo_icd-10] =~ /C49(\.[0-9]*)?/) {
        mutate { add_field => {"icd-10" => "Neoplasias de comportamiento no especificado" } }
      }
      else {
        mutate { add_field => {"icd-10" => "Neoplasia desconocida" } }
      }
    }
    else {
      mutate { add_field => {"icd-10" => "Neoplasia desconocida" } }
    }

  }

  # AÑADIMOS RANDOM PARA LAS EXPOSICIONES
  if "caracteristicas" in [tags] {
    ruby {
      code => "
        event.set('exp_asbestos', ((rand(2) ).to_i))
        event.set('exp_silice', ((rand(2) ).to_i))
        event.set('exp_carbon', ((rand(2) ).to_i))
        event.set('exp_tabaco', ((rand(2) ).to_i))
        event.set('exp_tabaco_ambiental', ((rand(2) ).to_i))
        event.set('exp_radon', ((rand(2) ).to_i))
      "
    }
    if [exp_asbestos] == 1{
      mutate { replace => {"exposicion_asbestos" => "Yes" } }
    }
    if [exp_silice] == 1{
      mutate { replace => {"exposicion_silice" => "Yes" } }
    }
    if [exp_radon] == 1{
      mutate { replace => {"exposicion_radon" => "Yes" } }
    }
    if [exp_carbon] == 1{
      mutate { replace => {"exposicion_carbon" => "Yes" } }
    }
    if [exp_tabaco] == 1{
      mutate { replace => {"exposicion_tabaco" => "Yes" } }
    }
    if [exp_tabaco_ambiental] == 1{
      mutate { replace => {"exposicion_ambiental_tabaco" => "Yes" } }
    }
    mutate { remove_field => [ "exp_radon", "exp_carbon", "exp_silice", "exp_tabaco", "exp_tabaco_ambiental", "exp_asbestos" ] }
  }

  # CALCULAR EL IMC SI EXISTE LA ALTURA Y PESO Y NO EXISTE EL CAMPO E INDICAR SI ES: normal, sobrepeso, infrapeso, etc
  # NORMALIZAR EL PESO PARA QUE SIEMPRE ESTÉ EN KILOS
  if "caracteristicas" in [tags] {
    if [peso] {
      mutate { convert => { "peso" => "float" } }
      if [peso] != 0 {
        if [peso] > 150 {
          ruby {
            code => "event.set('peso2' , (event.get('peso').to_f * 0.4535))"
         }
        }
      }
    }

    if [peso2] {
      mutate { copy => { "peso2" => "peso"  } }
      mutate { remove_field => [ "peso2" ] }
    }

    mutate { convert => { "altura" => "float" } }
    mutate { convert => { "imc" => "float" } }
    if [altura] > 0 and [peso] > 0 and [imc] == 0 {
      ruby {
        code => "event.set('imc' , (event.get('peso').to_i * 10000) / (event.get('altura').to_i * event.get('altura').to_i))"
      }
    }

  }


  # GENERACION DE LOS CAMPOS DEMOGRAFICOS pais,pais_siglas, estado, estado_siglas, pais_estado PARA SU POSTERIOR EXPLOTACION EN MAPA PARA diagnostico
  if "diagnostico" in [tags] {
    mutate { add_field => {"pais" => "Estados Unidos" } }
    mutate { add_field => {"pais_siglas" => "US" } }
    if [id_paciente] =~ /^^00.*/ or [id_paciente] =~ /^32.*/ or [id_paciente] =~ /^64.*/ or [id_paciente] =~ /^96.*/ or [id_paciente] =~ /^c8.*/ or [id_paciente] =~ /^fa.*/ {
      mutate { add_field => {"estado" => "Alabama" } }
      mutate { add_field => {"estado_siglas" => "AL" } }
      mutate { add_field => {"pais_estado" => "US-AL" } }
    }
    else if [id_paciente] =~ /^01.*/ or [id_paciente] =~ /^33.*/ or [id_paciente] =~ /^65.*/ or [id_paciente] =~ /^97.*/ or [id_paciente] =~ /^c9.*/ or [id_paciente] =~ /^fb.*/ {
      mutate { add_field => {"estado" => "Alaska" } }
      mutate { add_field => {"estado_siglas" => "Ak" } }
      mutate { add_field => {"pais_estado" => "US-Ak" } }
    }
    else if [id_paciente] =~ /^02.*/ or [id_paciente] =~ /^34.*/ or [id_paciente] =~ /^66.*/ or [id_paciente] =~ /^98.*/ or [id_paciente] =~ /^ca.*/ or [id_paciente] =~ /^fc.*/ {
      mutate { add_field => {"estado" => "Arizona" } }
      mutate { add_field => {"estado_siglas" => "AZ" } }
      mutate { add_field => {"pais_estado" => "US-AZ" } }
    }
    else if [id_paciente] =~ /^03.*/ or [id_paciente] =~ /^35.*/ or [id_paciente] =~ /^67.*/ or [id_paciente] =~ /^99.*/ or [id_paciente] =~ /^cb.*/ or [id_paciente] =~ /^fd.*/ {
      mutate { add_field => {"estado" => "Arkansas" } }
      mutate { add_field => {"estado_siglas" => "AR" } }
      mutate { add_field => {"pais_estado" => "US-AR" } }
    }
    else if [id_paciente] =~ /^04.*/ or [id_paciente] =~ /^36.*/ or [id_paciente] =~ /^68.*/ or [id_paciente] =~ /^9a.*/ or [id_paciente] =~ /^cc.*/ or [id_paciente] =~ /^fe.*/ {
      mutate { add_field => {"estado" => "California" } }
      mutate { add_field => {"estado_siglas" => "CA" } }
      mutate { add_field => {"pais_estado" => "US-CA" } }
    }
    else if [id_paciente] =~ /^05.*/ or [id_paciente] =~ /^37.*/ or [id_paciente] =~ /^69.*/ or [id_paciente] =~ /^9b.*/ or [id_paciente] =~ /^cd.*/ or [id_paciente] =~ /^ff.*/ {
      mutate { add_field => {"estado" => "Colorado" } }
      mutate { add_field => {"estado_siglas" => "CO" } }
      mutate { add_field => {"pais_estado" => "US-CO" } }
    }
    else if [id_paciente] =~ /^06.*/ or [id_paciente] =~ /^38.*/ or [id_paciente] =~ /^6a.*/ or [id_paciente] =~ /^9c.*/ or [id_paciente] =~ /^ce.*/ {
      mutate { add_field => {"estado" => "Connecticut" } }
      mutate { add_field => {"estado_siglas" => "CT" } }
      mutate { add_field => {"pais_estado" => "US-CT" } }
    }
    else if [id_paciente] =~ /^07.*/ or [id_paciente] =~ /^39.*/ or [id_paciente] =~ /^6b.*/ or [id_paciente] =~ /^9d.*/ or [id_paciente] =~ /^cf.*/ {
      mutate { add_field => {"estado" => "Carolina del Norte" } }
      mutate { add_field => {"estado_siglas" => "NC" } }
      mutate { add_field => {"pais_estado" => "US-NC" } }
    }
    else if [id_paciente] =~ /^08.*/ or [id_paciente] =~ /^3a.*/ or [id_paciente] =~ /^6c.*/ or [id_paciente] =~ /^9e.*/ or [id_paciente] =~ /^d0.*/ {
      mutate { add_field => {"estado" => "Carolina del Sur" } }
      mutate { add_field => {"estado_siglas" => "SC" } }
      mutate { add_field => {"pais_estado" => "US-SC" } }
    }
    else if [id_paciente] =~ /^09.*/ or [id_paciente] =~ /^3b.*/ or [id_paciente] =~ /^6d.*/ or [id_paciente] =~ /^9f.*/ or [id_paciente] =~ /^d1.*/ {
      mutate { add_field => {"estado" => "Dakota del Sur" } }
      mutate { add_field => {"estado_siglas" => "SD" } }
      mutate { add_field => {"pais_estado" => "US-SD" } }
    }
    else if [id_paciente] =~ /^0a.*/ or [id_paciente] =~ /^3c.*/ or [id_paciente] =~ /^6e.*/ or [id_paciente] =~ /^a0.*/ or [id_paciente] =~ /^d2.*/ {
      mutate { add_field => {"estado" => "Dakota del Norte" } }
      mutate { add_field => {"estado_siglas" => "ND" } }
      mutate { add_field => {"pais_estado" => "US-ND" } }
    }
    else if [id_paciente] =~ /^0b.*/ or [id_paciente] =~ /^3d.*/ or [id_paciente] =~ /^6f.*/ or [id_paciente] =~ /^a1.*/ or [id_paciente] =~ /^d3.*/ {
      mutate { add_field => {"estado" => "Delaware" } }
      mutate { add_field => {"estado_siglas" => "DE" } }
      mutate { add_field => {"pais_estado" => "US-DE" } }
    }
    else if [id_paciente] =~ /^0c.*/ or [id_paciente] =~ /^3e.*/ or [id_paciente] =~ /^70.*/ or [id_paciente] =~ /^a2.*/ or [id_paciente] =~ /^d4.*/ {
      mutate { add_field => {"estado" => "Florida" } }
      mutate { add_field => {"estado_siglas" => "FL" } }
      mutate { add_field => {"pais_estado" => "US-FL" } }
    }
    else if [id_paciente] =~ /^0d.*/ or [id_paciente] =~ /^3f.*/ or [id_paciente] =~ /^71.*/ or [id_paciente] =~ /^a3.*/ or [id_paciente] =~ /^d5.*/ {
      mutate { add_field => {"estado" => "Georgia" } }
      mutate { add_field => {"estado_siglas" => "GA" } }
      mutate { add_field => {"pais_estado" => "US-GA" } }
    }
    else if [id_paciente] =~ /^0e.*/ or [id_paciente] =~ /^40.*/ or [id_paciente] =~ /^72.*/ or [id_paciente] =~ /^a4.*/ or [id_paciente] =~ /^d6.*/ {
      mutate { add_field => {"estado" => "Hawai" } }
      mutate { add_field => {"estado_siglas" => "HI" } }
      mutate { add_field => {"pais_estado" => "US-HI" } }
    }
    else if [id_paciente] =~ /^0f.*/ or [id_paciente] =~ /^41.*/ or [id_paciente] =~ /^73.*/ or [id_paciente] =~ /^a5.*/ or [id_paciente] =~ /^d7.*/ {
      mutate { add_field => {"estado" => "Idaho" } }
      mutate { add_field => {"estado_siglas" => "ID" } }
      mutate { add_field => {"pais_estado" => "US-ID" } }
    }
    else if [id_paciente] =~ /^10.*/ or [id_paciente] =~ /^42.*/ or [id_paciente] =~ /^74.*/ or [id_paciente] =~ /^a6.*/ or [id_paciente] =~ /^d8.*/ {
      mutate { add_field => {"estado" => "Illinois" } }
      mutate { add_field => {"estado_siglas" => "IL" } }
      mutate { add_field => {"pais_estado" => "US-IL" } }
    }
    else if [id_paciente] =~ /^11.*/ or [id_paciente] =~ /^43.*/ or [id_paciente] =~ /^75.*/ or [id_paciente] =~ /^a7.*/ or [id_paciente] =~ /^d9.*/ {
      mutate { add_field => {"estado" => "Indiana" } }
      mutate { add_field => {"estado_siglas" => "IN" } }
      mutate { add_field => {"pais_estado" => "US-IN" } }
    }
    else if [id_paciente] =~ /^12.*/ or [id_paciente] =~ /^44.*/ or [id_paciente] =~ /^76.*/ or [id_paciente] =~ /^a8.*/ or [id_paciente] =~ /^da.*/ {
      mutate { add_field => {"estado" => "Iowa" } }
      mutate { add_field => {"estado_siglas" => "IA" } }
      mutate { add_field => {"pais_estado" => "US-IA" } }
    }
    else if [id_paciente] =~ /^13.*/ or [id_paciente] =~ /^45.*/ or [id_paciente] =~ /^77.*/ or [id_paciente] =~ /^a9.*/ or [id_paciente] =~ /^db.*/ {
      mutate { add_field => {"estado" => "Kansas" } }
      mutate { add_field => {"estado_siglas" => "KS" } }
      mutate { add_field => {"pais_estado" => "US-KS" } }
    }
    else if [id_paciente] =~ /^14.*/ or [id_paciente] =~ /^46.*/ or [id_paciente] =~ /^78.*/ or [id_paciente] =~ /^aa.*/ or [id_paciente] =~ /^dc.*/ {
      mutate { add_field => {"estado" => "Kentucky" } }
      mutate { add_field => {"estado_siglas" => "KY" } }
      mutate { add_field => {"pais_estado" => "US-KY" } }
    }
    else if [id_paciente] =~ /^15.*/ or [id_paciente] =~ /^47.*/ or [id_paciente] =~ /^79.*/ or [id_paciente] =~ /^ab.*/ or [id_paciente] =~ /^dd.*/ {
      mutate { add_field => {"estado" => "Luisiana" } }
      mutate { add_field => {"estado_siglas" => "LA" } }
      mutate { add_field => {"pais_estado" => "US-LA" } }
    }
    else if [id_paciente] =~ /^16.*/ or [id_paciente] =~ /^48.*/ or [id_paciente] =~ /^7a.*/ or [id_paciente] =~ /^ac.*/ or [id_paciente] =~ /^de.*/ {
      mutate { add_field => {"estado" => "Maine" } }
      mutate { add_field => {"estado_siglas" => "ME" } }
      mutate { add_field => {"pais_estado" => "US-ME" } }
    }
    else if [id_paciente] =~ /^17.*/ or [id_paciente] =~ /^49.*/ or [id_paciente] =~ /^7b.*/ or [id_paciente] =~ /^ad.*/ or [id_paciente] =~ /^df.*/ {
      mutate { add_field => {"estado" => "Maryland" } }
      mutate { add_field => {"estado_siglas" => "MD" } }
      mutate { add_field => {"pais_estado" => "US-MD" } }
    }
    else if [id_paciente] =~ /^18.*/ or [id_paciente] =~ /^4a.*/ or [id_paciente] =~ /^7c.*/ or [id_paciente] =~ /^ae.*/ or [id_paciente] =~ /^e0.*/ {
      mutate { add_field => {"estado" => "Massachusetts" } }
      mutate { add_field => {"estado_siglas" => "MA" } }
      mutate { add_field => {"pais_estado" => "US-MA" } }
    }
    else if [id_paciente] =~ /^19.*/ or [id_paciente] =~ /^4b.*/ or [id_paciente] =~ /^7d.*/ or [id_paciente] =~ /^af.*/ or [id_paciente] =~ /^e1.*/ {
      mutate { add_field => {"estado" => "Michigan" } }
      mutate { add_field => {"estado_siglas" => "MI" } }
      mutate { add_field => {"pais_estado" => "US-MI" } }
    }
    else if [id_paciente] =~ /^1a.*/ or [id_paciente] =~ /^4c.*/ or [id_paciente] =~ /^7e.*/ or [id_paciente] =~ /^b0.*/ or [id_paciente] =~ /^e2.*/ {
      mutate { add_field => {"estado" => "Minnesota" } }
      mutate { add_field => {"estado_siglas" => "MN" } }
      mutate { add_field => {"pais_estado" => "US-MN" } }
    }
    else if [id_paciente] =~ /^1b.*/ or [id_paciente] =~ /^4d.*/ or [id_paciente] =~ /^7f.*/ or [id_paciente] =~ /^b1.*/ or [id_paciente] =~ /^e3.*/ {
      mutate { add_field => {"estado" => "Misisipi" } }
      mutate { add_field => {"estado_siglas" => "MS" } }
      mutate { add_field => {"pais_estado" => "US-MS" } }
    }
    else if [id_paciente] =~ /^1c.*/ or [id_paciente] =~ /^4e.*/ or [id_paciente] =~ /^80.*/ or [id_paciente] =~ /^b2.*/ or [id_paciente] =~ /^e4.*/ {
      mutate { add_field => {"estado" => "Misuri" } }
      mutate { add_field => {"estado_siglas" => "MO" } }
      mutate { add_field => {"pais_estado" => "US-MO" } }
    }
    else if [id_paciente] =~ /^1d.*/ or [id_paciente] =~ /^4f.*/ or [id_paciente] =~ /^81.*/ or [id_paciente] =~ /^b3.*/ or [id_paciente] =~ /^e5.*/ {
      mutate { add_field => {"estado" => "Montana" } }
      mutate { add_field => {"estado_siglas" => "MT" } }
      mutate { add_field => {"pais_estado" => "US-MT" } }
    }
    else if [id_paciente] =~ /^1e.*/ or [id_paciente] =~ /^50.*/ or [id_paciente] =~ /^82.*/ or [id_paciente] =~ /^b4.*/ or [id_paciente] =~ /^e6.*/ {
      mutate { add_field => {"estado" => "Nebraska" } }
      mutate { add_field => {"estado_siglas" => "NE" } }
      mutate { add_field => {"pais_estado" => "US-NE" } }
    }
    else if [id_paciente] =~ /^1f.*/ or [id_paciente] =~ /^51.*/ or [id_paciente] =~ /^83.*/ or [id_paciente] =~ /^b5.*/ or [id_paciente] =~ /^e7.*/ {
      mutate { add_field => {"estado" => "Nevada" } }
      mutate { add_field => {"estado_siglas" => "NV" } }
      mutate { add_field => {"pais_estado" => "US-NV" } }
    }
    else if [id_paciente] =~ /^20.*/ or [id_paciente] =~ /^52.*/ or [id_paciente] =~ /^84.*/ or [id_paciente] =~ /^b6.*/ or [id_paciente] =~ /^e8.*/ {
      mutate { add_field => {"estado" => "Nueva Jersey" } }
      mutate { add_field => {"estado_siglas" => "NJ" } }
      mutate { add_field => {"pais_estado" => "US-NJ" } }
    }
    else if [id_paciente] =~ /^21.*/ or [id_paciente] =~ /^53.*/ or [id_paciente] =~ /^85.*/ or [id_paciente] =~ /^b7.*/ or [id_paciente] =~ /^e9.*/ {
      mutate { add_field => {"estado" => "Nueva York" } }
      mutate { add_field => {"estado_siglas" => "NY" } }
      mutate { add_field => {"pais_estado" => "US-NY" } }
    }
    else if [id_paciente] =~ /^22.*/ or [id_paciente] =~ /^54.*/ or [id_paciente] =~ /^86.*/ or [id_paciente] =~ /^b8.*/ or [id_paciente] =~ /^ea.*/ {
      mutate { add_field => {"estado" => "Nuevo Hampshire" } }
      mutate { add_field => {"estado_siglas" => "NH" } }
      mutate { add_field => {"pais_estado" => "US-NH" } }
    }
    else if [id_paciente] =~ /^23.*/ or [id_paciente] =~ /^55.*/ or [id_paciente] =~ /^87.*/ or [id_paciente] =~ /^b9.*/ or [id_paciente] =~ /^eb.*/ {
      mutate { add_field => {"estado" => "Nuevo Mexico" } }
      mutate { add_field => {"estado_siglas" => "NM" } }
      mutate { add_field => {"pais_estado" => "US-NM" } }
    }
    else if [id_paciente] =~ /^24.*/ or [id_paciente] =~ /^56.*/ or [id_paciente] =~ /^88.*/ or [id_paciente] =~ /^ba.*/ or [id_paciente] =~ /^ec.*/ {
      mutate { add_field => {"estado" => "Ohio" } }
      mutate { add_field => {"estado_siglas" => "OH" } }
      mutate { add_field => {"pais_estado" => "US-OH" } }
    }
    else if [id_paciente] =~ /^25.*/ or [id_paciente] =~ /^57.*/ or [id_paciente] =~ /^89.*/ or [id_paciente] =~ /^bb.*/ or [id_paciente] =~ /^ed.*/ {
      mutate { add_field => {"estado" => "Oklahoma" } }
      mutate { add_field => {"estado_siglas" => "OK" } }
      mutate { add_field => {"pais_estado" => "US-OK" } }
    }
    else if [id_paciente] =~ /^26.*/ or [id_paciente] =~ /^58.*/ or [id_paciente] =~ /^8a.*/ or [id_paciente] =~ /^bc.*/ or [id_paciente] =~ /^ee.*/ {
      mutate { add_field => {"estado" => "Oregon" } }
      mutate { add_field => {"estado_siglas" => "OR" } }
      mutate { add_field => {"pais_estado" => "US-OR" } }
    }
    else if [id_paciente] =~ /^27.*/ or [id_paciente] =~ /^59.*/ or [id_paciente] =~ /^8b.*/ or [id_paciente] =~ /^bd.*/ or [id_paciente] =~ /^ef.*/ {
      mutate { add_field => {"estado" => "Pensilvania" } }
      mutate { add_field => {"estado_siglas" => "PA" } }
      mutate { add_field => {"pais_estado" => "US-PA" } }
    }
    else if [id_paciente] =~ /^28.*/ or [id_paciente] =~ /^5a.*/ or [id_paciente] =~ /^8c.*/ or [id_paciente] =~ /^be.*/ or [id_paciente] =~ /^f0.*/ {
      mutate { add_field => {"estado" => "Rhode Island" } }
      mutate { add_field => {"estado_siglas" => "RI" } }
      mutate { add_field => {"pais_estado" => "US-RI" } }
    }
    else if [id_paciente] =~ /^29.*/ or [id_paciente] =~ /^5b.*/ or [id_paciente] =~ /^8d.*/ or [id_paciente] =~ /^bf.*/ or [id_paciente] =~ /^f1.*/ {
      mutate { add_field => {"estado" => "Tennessee" } }
      mutate { add_field => {"estado_siglas" => "TN" } }
      mutate { add_field => {"pais_estado" => "US-TN" } }
    }
    else if [id_paciente] =~ /^2a.*/ or [id_paciente] =~ /^5c.*/ or [id_paciente] =~ /^8e.*/ or [id_paciente] =~ /^c0.*/ or [id_paciente] =~ /^f2.*/ {
      mutate { add_field => {"estado" => "Texas" } }
      mutate { add_field => {"estado_siglas" => "TX" } }
      mutate { add_field => {"pais_estado" => "US-TX" } }
    }
    else if [id_paciente] =~ /^2b.*/ or [id_paciente] =~ /^5d.*/ or [id_paciente] =~ /^8f.*/ or [id_paciente] =~ /^c1.*/ or [id_paciente] =~ /^f3.*/ {
      mutate { add_field => {"estado" => "Utah" } }
      mutate { add_field => {"estado_siglas" => "UT" } }
      mutate { add_field => {"pais_estado" => "US-UT" } }
    }
    else if [id_paciente] =~ /^2c.*/ or [id_paciente] =~ /^5e.*/ or [id_paciente] =~ /^90.*/ or [id_paciente] =~ /^c2.*/ or [id_paciente] =~ /^f4.*/ {
      mutate { add_field => {"estado" => "Vermont" } }
      mutate { add_field => {"estado_siglas" => "VT" } }
      mutate { add_field => {"pais_estado" => "US-VT" } }
    }
    else if [id_paciente] =~ /^2d.*/ or [id_paciente] =~ /^5f.*/ or [id_paciente] =~ /^91.*/ or [id_paciente] =~ /^c3.*/ or [id_paciente] =~ /^f5.*/ {
      mutate { add_field => {"estado" => "Virginia" } }
      mutate { add_field => {"estado_siglas" => "VA" } }
      mutate { add_field => {"pais_estado" => "US-VA" } }
    }
    else if [id_paciente] =~ /^2e.*/ or [id_paciente] =~ /^60.*/ or [id_paciente] =~ /^92.*/ or [id_paciente] =~ /^c4.*/ or [id_paciente] =~ /^f6.*/ {
      mutate { add_field => {"estado" => "Virginia Occidental" } }
      mutate { add_field => {"estado_siglas" => "WV" } }
      mutate { add_field => {"pais_estado" => "US-WV" } }
    }
    else if [id_paciente] =~ /^2f.*/ or [id_paciente] =~ /^61.*/ or [id_paciente] =~ /^93.*/ or [id_paciente] =~ /^c5.*/ or [id_paciente] =~ /^f7.*/ {
      mutate { add_field => {"estado" => "Washington" } }
      mutate { add_field => {"estado_siglas" => "WA" } }
      mutate { add_field => {"pais_estado" => "US-WA" } }
    }
    else if [id_paciente] =~ /^30.*/ or [id_paciente] =~ /^62.*/ or [id_paciente] =~ /^94.*/ or [id_paciente] =~ /^c6.*/ or [id_paciente] =~ /^f8.*/ {
      mutate { add_field => {"estado" => "Wisconsin" } }
      mutate { add_field => {"estado_siglas" => "WI" } }
      mutate { add_field => {"pais_estado" => "US-WI" } }
    }
    else {
    #else if [id_paciente] =~ /^31.*/ or [id_paciente] =~ /^63.*/ or [id_paciente] =~ /^95.*/ or [id_paciente] =~ /^c7.*/ or [id_paciente] =~ /^f9.*/ {
      mutate { add_field => {"estado" => "Wyoming" } }
      mutate { add_field => {"estado_siglas" => "WY" } }
      mutate { add_field => {"pais_estado" => "US-WY" } }
    }
  }


  # CONVERTIMOS A INTEGER/FLOAT LOS CAMPOS QUE DESEEMOS Y AÚN NO HAYAMOS CONVERTIDO
  mutate { convert => { "año_dejo_fumar" => "integer" } }
  mutate { convert => { "año_empezo_fumar" => "integer" } }
  mutate { convert => { "años_fumando" => "integer" } }
  mutate { convert => { "cigarros_al_dia" => "integer" } }
  mutate { convert => { "consumo_diario_alcohol" => "integer" } }
  mutate { convert => { "consumo_semanal_alcohol" => "integer" } }
  mutate { convert => { "paquetes_tabaco_anual" => "integer" } }


  # GENERAMOS UN FINGERPRINT UNICO PARA INDEXAR EN LOS INDICES Y LO GUARDAMOS EN UN CAMPO METADATA
  # PARA CARACTERISTICAS UTILIZAMOS UNICAMENTE EL CAMPO id_paciente
  if "caracteristicas" in [tags] {
    fingerprint {
      #source => ["id_paciente","edad_al_inicio"]
      source => ["id_paciente"]
      target => "[@metadata][_id]"
      method => "SHA1"
      #concatenate_sources => true
    }
  }
  # PARA DIAGNOSTICO UTILIZAMOS TODOS LOS CAMPOS
  if "diagnostico" in [tags] {
    fingerprint {
      target => "[@metadata][_id]"
      method => "SHA1"
      base64encode => true
    }
  mutate { remove_field => [ "message" ] }
  }
  # PARA HISTORIAL_FAMILIAR UTILIZAMOS MULTIPLES CAMPOS
  if "historial_familiar" in [tags] {
    fingerprint {
       source => ["id_paciente","edad_diagnostico_pariente","genero_pariente","diagnostico_pariente","tipo_pariente","pariente_con_cancer","familiares_recuento_antecedentes_cancer"]
      target => "[@metadata][_id]"
      method => "SHA1"
      base64encode => true
      concatenate_sources => true
    }
  }
}

output {
  # MANDAMOS LOS DATOS A ELASTICSEARCH AL INDICE QUE CORRESPONDA
  stdout { codec => rubydebug }
  if "diagnostico" in [tags] {
    elasticsearch {
      hosts => ["es01:9200", "es02:9200", "es03:9200"]
      user => "elastic"
      password => "changeme"
      action => "update"
      doc_as_upsert => true
      document_id => "%{[@metadata][_id]}"
      index => "pacientes_diagnostico"
    }
  }
  if "caracteristicas" in [tags] {
    elasticsearch {
      hosts => ["es01:9200", "es02:9200", "es03:9200"]
      user => "elastic"
      password => "changeme"
      action => "update"
      doc_as_upsert => true
      document_id => "%{[@metadata][_id]}"
      index => "pacientes_caracteristicas"
    }
  }
  if "historial_familiar" in [tags] {
    elasticsearch {
      hosts => ["es01:9200", "es02:9200", "es03:9200"]
      user => "elastic"
      password => "changeme"
      action => "update"
      doc_as_upsert => true
      document_id => "%{[@metadata][_id]}"
      index => "pacientes_historial_familiar"
    }
  }
}
